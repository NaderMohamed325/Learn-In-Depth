
Stm32.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000002d8  08000130  08000130  00001130  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000408  08000410  00001410  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000408  08000408  00001410  2**0
                  CONTENTS
  4 .ARM          00000000  08000408  08000408  00001410  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000408  08000410  00001410  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000408  08000408  00001408  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  0800040c  0800040c  0000140c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  00001410  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000068  20000000  08000410  00002000  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000068  08000410  00002068  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00001410  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000167b  00000000  00000000  00001439  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000665  00000000  00000000  00002ab4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_loc    0000088b  00000000  00000000  00003119  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00000180  00000000  00000000  000039a8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_ranges 00000138  00000000  00000000  00003b28  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00000a4f  00000000  00000000  00003c60  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   000025db  00000000  00000000  000046af  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    0000c4ed  00000000  00000000  00006c8a  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  00013177  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000334  00000000  00000000  000131bc  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	@ (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	@ (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	@ (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	20000000 	.word	0x20000000
 800014c:	00000000 	.word	0x00000000
 8000150:	080003f0 	.word	0x080003f0

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	@ (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	@ (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	@ (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	20000004 	.word	0x20000004
 800016c:	080003f0 	.word	0x080003f0

08000170 <EXTI0_IRQHandler>:
        Disable_NVIC(EXTI_Cfg->EXI_Pin.EXTI_InputLine_Number);
    }
}

void EXTI0_IRQHandler(void)
{
 8000170:	b508      	push	{r3, lr}
    EXTI->PR |= (1 << 0);
 8000172:	4a04      	ldr	r2, [pc, #16]	@ (8000184 <EXTI0_IRQHandler+0x14>)
 8000174:	6953      	ldr	r3, [r2, #20]
 8000176:	f043 0301 	orr.w	r3, r3, #1
 800017a:	6153      	str	r3, [r2, #20]
    G_IRQ_Callback[0]();
 800017c:	4b02      	ldr	r3, [pc, #8]	@ (8000188 <EXTI0_IRQHandler+0x18>)
 800017e:	681b      	ldr	r3, [r3, #0]
 8000180:	4798      	blx	r3
}
 8000182:	bd08      	pop	{r3, pc}
 8000184:	40010400 	.word	0x40010400
 8000188:	2000001c 	.word	0x2000001c

0800018c <EXTI1_IRQHandler>:

void EXTI1_IRQHandler(void)
{
 800018c:	b508      	push	{r3, lr}
    EXTI->PR |= (1 << 1);
 800018e:	4a04      	ldr	r2, [pc, #16]	@ (80001a0 <EXTI1_IRQHandler+0x14>)
 8000190:	6953      	ldr	r3, [r2, #20]
 8000192:	f043 0302 	orr.w	r3, r3, #2
 8000196:	6153      	str	r3, [r2, #20]
    G_IRQ_Callback[1]();
 8000198:	4b02      	ldr	r3, [pc, #8]	@ (80001a4 <EXTI1_IRQHandler+0x18>)
 800019a:	685b      	ldr	r3, [r3, #4]
 800019c:	4798      	blx	r3
}
 800019e:	bd08      	pop	{r3, pc}
 80001a0:	40010400 	.word	0x40010400
 80001a4:	2000001c 	.word	0x2000001c

080001a8 <EXTI2_IRQHandler>:

void EXTI2_IRQHandler(void)
{
 80001a8:	b508      	push	{r3, lr}
    EXTI->PR |= (1 << 2);
 80001aa:	4a04      	ldr	r2, [pc, #16]	@ (80001bc <EXTI2_IRQHandler+0x14>)
 80001ac:	6953      	ldr	r3, [r2, #20]
 80001ae:	f043 0304 	orr.w	r3, r3, #4
 80001b2:	6153      	str	r3, [r2, #20]
    G_IRQ_Callback[2]();
 80001b4:	4b02      	ldr	r3, [pc, #8]	@ (80001c0 <EXTI2_IRQHandler+0x18>)
 80001b6:	689b      	ldr	r3, [r3, #8]
 80001b8:	4798      	blx	r3
}
 80001ba:	bd08      	pop	{r3, pc}
 80001bc:	40010400 	.word	0x40010400
 80001c0:	2000001c 	.word	0x2000001c

080001c4 <EXTI3_IRQHandler>:

void EXTI3_IRQHandler(void)
{
 80001c4:	b508      	push	{r3, lr}
    EXTI->PR |= (1 << 3);
 80001c6:	4a04      	ldr	r2, [pc, #16]	@ (80001d8 <EXTI3_IRQHandler+0x14>)
 80001c8:	6953      	ldr	r3, [r2, #20]
 80001ca:	f043 0308 	orr.w	r3, r3, #8
 80001ce:	6153      	str	r3, [r2, #20]
    G_IRQ_Callback[3]();
 80001d0:	4b02      	ldr	r3, [pc, #8]	@ (80001dc <EXTI3_IRQHandler+0x18>)
 80001d2:	68db      	ldr	r3, [r3, #12]
 80001d4:	4798      	blx	r3
}
 80001d6:	bd08      	pop	{r3, pc}
 80001d8:	40010400 	.word	0x40010400
 80001dc:	2000001c 	.word	0x2000001c

080001e0 <EXTI4_IRQHandler>:

void EXTI4_IRQHandler(void)
{
 80001e0:	b508      	push	{r3, lr}
    EXTI->PR |= (1 << 4);
 80001e2:	4a04      	ldr	r2, [pc, #16]	@ (80001f4 <EXTI4_IRQHandler+0x14>)
 80001e4:	6953      	ldr	r3, [r2, #20]
 80001e6:	f043 0310 	orr.w	r3, r3, #16
 80001ea:	6153      	str	r3, [r2, #20]
    G_IRQ_Callback[4]();
 80001ec:	4b02      	ldr	r3, [pc, #8]	@ (80001f8 <EXTI4_IRQHandler+0x18>)
 80001ee:	691b      	ldr	r3, [r3, #16]
 80001f0:	4798      	blx	r3
}
 80001f2:	bd08      	pop	{r3, pc}
 80001f4:	40010400 	.word	0x40010400
 80001f8:	2000001c 	.word	0x2000001c

080001fc <EXTI9_5_IRQHandler>:

void EXTI9_5_IRQHandler(void)
{
 80001fc:	b508      	push	{r3, lr}
    if (EXTI->PR & (1 << 5))
 80001fe:	4b21      	ldr	r3, [pc, #132]	@ (8000284 <EXTI9_5_IRQHandler+0x88>)
 8000200:	695b      	ldr	r3, [r3, #20]
 8000202:	f013 0f20 	tst.w	r3, #32
 8000206:	d007      	beq.n	8000218 <EXTI9_5_IRQHandler+0x1c>
    {
        EXTI->PR |= (1 << 5);
 8000208:	4a1e      	ldr	r2, [pc, #120]	@ (8000284 <EXTI9_5_IRQHandler+0x88>)
 800020a:	6953      	ldr	r3, [r2, #20]
 800020c:	f043 0320 	orr.w	r3, r3, #32
 8000210:	6153      	str	r3, [r2, #20]
        G_IRQ_Callback[5]();
 8000212:	4b1d      	ldr	r3, [pc, #116]	@ (8000288 <EXTI9_5_IRQHandler+0x8c>)
 8000214:	695b      	ldr	r3, [r3, #20]
 8000216:	4798      	blx	r3
    }
    if (EXTI->PR & (1 << 6))
 8000218:	4b1a      	ldr	r3, [pc, #104]	@ (8000284 <EXTI9_5_IRQHandler+0x88>)
 800021a:	695b      	ldr	r3, [r3, #20]
 800021c:	f013 0f40 	tst.w	r3, #64	@ 0x40
 8000220:	d007      	beq.n	8000232 <EXTI9_5_IRQHandler+0x36>
    {
        EXTI->PR |= (1 << 6);
 8000222:	4a18      	ldr	r2, [pc, #96]	@ (8000284 <EXTI9_5_IRQHandler+0x88>)
 8000224:	6953      	ldr	r3, [r2, #20]
 8000226:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 800022a:	6153      	str	r3, [r2, #20]
        G_IRQ_Callback[6]();
 800022c:	4b16      	ldr	r3, [pc, #88]	@ (8000288 <EXTI9_5_IRQHandler+0x8c>)
 800022e:	699b      	ldr	r3, [r3, #24]
 8000230:	4798      	blx	r3
    }
    if (EXTI->PR & (1 << 7))
 8000232:	4b14      	ldr	r3, [pc, #80]	@ (8000284 <EXTI9_5_IRQHandler+0x88>)
 8000234:	695b      	ldr	r3, [r3, #20]
 8000236:	f013 0f80 	tst.w	r3, #128	@ 0x80
 800023a:	d007      	beq.n	800024c <EXTI9_5_IRQHandler+0x50>
    {
        EXTI->PR |= (1 << 7);
 800023c:	4a11      	ldr	r2, [pc, #68]	@ (8000284 <EXTI9_5_IRQHandler+0x88>)
 800023e:	6953      	ldr	r3, [r2, #20]
 8000240:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8000244:	6153      	str	r3, [r2, #20]
        G_IRQ_Callback[7]();
 8000246:	4b10      	ldr	r3, [pc, #64]	@ (8000288 <EXTI9_5_IRQHandler+0x8c>)
 8000248:	69db      	ldr	r3, [r3, #28]
 800024a:	4798      	blx	r3
    }
    if (EXTI->PR & (1 << 8))
 800024c:	4b0d      	ldr	r3, [pc, #52]	@ (8000284 <EXTI9_5_IRQHandler+0x88>)
 800024e:	695b      	ldr	r3, [r3, #20]
 8000250:	f413 7f80 	tst.w	r3, #256	@ 0x100
 8000254:	d007      	beq.n	8000266 <EXTI9_5_IRQHandler+0x6a>
    {
        EXTI->PR |= (1 << 8);
 8000256:	4a0b      	ldr	r2, [pc, #44]	@ (8000284 <EXTI9_5_IRQHandler+0x88>)
 8000258:	6953      	ldr	r3, [r2, #20]
 800025a:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800025e:	6153      	str	r3, [r2, #20]
        G_IRQ_Callback[8]();
 8000260:	4b09      	ldr	r3, [pc, #36]	@ (8000288 <EXTI9_5_IRQHandler+0x8c>)
 8000262:	6a1b      	ldr	r3, [r3, #32]
 8000264:	4798      	blx	r3
    }
    if (EXTI->PR & (1 << 9))
 8000266:	4b07      	ldr	r3, [pc, #28]	@ (8000284 <EXTI9_5_IRQHandler+0x88>)
 8000268:	695b      	ldr	r3, [r3, #20]
 800026a:	f413 7f00 	tst.w	r3, #512	@ 0x200
 800026e:	d007      	beq.n	8000280 <EXTI9_5_IRQHandler+0x84>
    {
        EXTI->PR |= (1 << 9);
 8000270:	4a04      	ldr	r2, [pc, #16]	@ (8000284 <EXTI9_5_IRQHandler+0x88>)
 8000272:	6953      	ldr	r3, [r2, #20]
 8000274:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8000278:	6153      	str	r3, [r2, #20]
        G_IRQ_Callback[9]();
 800027a:	4b03      	ldr	r3, [pc, #12]	@ (8000288 <EXTI9_5_IRQHandler+0x8c>)
 800027c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800027e:	4798      	blx	r3
    }
}
 8000280:	bd08      	pop	{r3, pc}
 8000282:	bf00      	nop
 8000284:	40010400 	.word	0x40010400
 8000288:	2000001c 	.word	0x2000001c

0800028c <SPI1_IRQHandler>:
 *                          Generic Functions
 * =======================================================================================
 */
// ISR
void SPI1_IRQHandler(void)
{
 800028c:	b508      	push	{r3, lr}
    struct S_IRQ_SRC irq_src;
    irq_src.TXE = ((SPI1->SPI_SR & (1 << 1)) >> 1);
 800028e:	4b0a      	ldr	r3, [pc, #40]	@ (80002b8 <SPI1_IRQHandler+0x2c>)
 8000290:	689a      	ldr	r2, [r3, #8]
 8000292:	f3c2 0240 	ubfx	r2, r2, #1, #1
 8000296:	f04f 0000 	mov.w	r0, #0
 800029a:	f362 0000 	bfi	r0, r2, #0, #1
    irq_src.RXNE = ((SPI1->SPI_SR & (1 << 0)) >> 0);
 800029e:	689a      	ldr	r2, [r3, #8]
 80002a0:	f362 0041 	bfi	r0, r2, #1, #1
    irq_src.ERRI = ((SPI1->SPI_SR & (1 << 4)) >> 4);
 80002a4:	689b      	ldr	r3, [r3, #8]
 80002a6:	f3c3 1300 	ubfx	r3, r3, #4, #1
 80002aa:	f363 0082 	bfi	r0, r3, #2, #1

    Global_SPI_Config[SPI1_INDEX]->P_IRQ_CallBack(irq_src);
 80002ae:	4b03      	ldr	r3, [pc, #12]	@ (80002bc <SPI1_IRQHandler+0x30>)
 80002b0:	681b      	ldr	r3, [r3, #0]
 80002b2:	695b      	ldr	r3, [r3, #20]
 80002b4:	4798      	blx	r3
}
 80002b6:	bd08      	pop	{r3, pc}
 80002b8:	40013000 	.word	0x40013000
 80002bc:	2000005c 	.word	0x2000005c

080002c0 <SPI2_IRQHandler>:

void SPI2_IRQHandler(void)
{
 80002c0:	b508      	push	{r3, lr}
    struct S_IRQ_SRC irq_src;
    irq_src.TXE = ((SPI2->SPI_SR & (1 << 1)) >> 1);
 80002c2:	4b0a      	ldr	r3, [pc, #40]	@ (80002ec <SPI2_IRQHandler+0x2c>)
 80002c4:	689a      	ldr	r2, [r3, #8]
 80002c6:	f3c2 0240 	ubfx	r2, r2, #1, #1
 80002ca:	f04f 0000 	mov.w	r0, #0
 80002ce:	f362 0000 	bfi	r0, r2, #0, #1
    irq_src.RXNE = ((SPI2->SPI_SR & (1 << 0)) >> 0);
 80002d2:	689a      	ldr	r2, [r3, #8]
 80002d4:	f362 0041 	bfi	r0, r2, #1, #1
    irq_src.ERRI = ((SPI2->SPI_SR & (1 << 4)) >> 4);
 80002d8:	689b      	ldr	r3, [r3, #8]
 80002da:	f3c3 1300 	ubfx	r3, r3, #4, #1
 80002de:	f363 0082 	bfi	r0, r3, #2, #1

    Global_SPI_Config[SPI2_INDEX]->P_IRQ_CallBack(irq_src);
 80002e2:	4b03      	ldr	r3, [pc, #12]	@ (80002f0 <SPI2_IRQHandler+0x30>)
 80002e4:	685b      	ldr	r3, [r3, #4]
 80002e6:	695b      	ldr	r3, [r3, #20]
 80002e8:	4798      	blx	r3
}
 80002ea:	bd08      	pop	{r3, pc}
 80002ec:	40003800 	.word	0x40003800
 80002f0:	2000005c 	.word	0x2000005c

080002f4 <USART1_IRQHandler>:
	}
    }

//ISR
void USART1_IRQHandler(void)
    {
 80002f4:	b508      	push	{r3, lr}

    Global_UART_Config->P_IRQ_CallBack();
 80002f6:	4b02      	ldr	r3, [pc, #8]	@ (8000300 <USART1_IRQHandler+0xc>)
 80002f8:	681b      	ldr	r3, [r3, #0]
 80002fa:	691b      	ldr	r3, [r3, #16]
 80002fc:	4798      	blx	r3

    }
 80002fe:	bd08      	pop	{r3, pc}
 8000300:	20000064 	.word	0x20000064

08000304 <USART2_IRQHandler>:

void USART2_IRQHandler(void)
    {
 8000304:	b508      	push	{r3, lr}
    Global_UART_Config->P_IRQ_CallBack();
 8000306:	4b02      	ldr	r3, [pc, #8]	@ (8000310 <USART2_IRQHandler+0xc>)
 8000308:	681b      	ldr	r3, [r3, #0]
 800030a:	691b      	ldr	r3, [r3, #16]
 800030c:	4798      	blx	r3

    }
 800030e:	bd08      	pop	{r3, pc}
 8000310:	20000064 	.word	0x20000064

08000314 <USART3_IRQHandler>:
void USART3_IRQHandler(void)
    {
 8000314:	b508      	push	{r3, lr}
    Global_UART_Config->P_IRQ_CallBack();
 8000316:	4b02      	ldr	r3, [pc, #8]	@ (8000320 <USART3_IRQHandler+0xc>)
 8000318:	681b      	ldr	r3, [r3, #0]
 800031a:	691b      	ldr	r3, [r3, #16]
 800031c:	4798      	blx	r3

    }
 800031e:	bd08      	pop	{r3, pc}
 8000320:	20000064 	.word	0x20000064

08000324 <main>:
 */

int main(void)
    {
    // Enable necessary clocks
    RCC_GPIOA_CLK_EN();
 8000324:	4b0a      	ldr	r3, [pc, #40]	@ (8000350 <main+0x2c>)
 8000326:	699a      	ldr	r2, [r3, #24]
 8000328:	f042 0204 	orr.w	r2, r2, #4
 800032c:	619a      	str	r2, [r3, #24]
    RCC_GPIOB_CLK_EN();
 800032e:	699a      	ldr	r2, [r3, #24]
 8000330:	f042 0208 	orr.w	r2, r2, #8
 8000334:	619a      	str	r2, [r3, #24]
    RCC_USART1_CLK_EN();
 8000336:	699a      	ldr	r2, [r3, #24]
 8000338:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 800033c:	619a      	str	r2, [r3, #24]
    RCC_SPI1_CLK_EN();
 800033e:	699a      	ldr	r2, [r3, #24]
 8000340:	f442 5280 	orr.w	r2, r2, #4096	@ 0x1000
 8000344:	619a      	str	r2, [r3, #24]
    RCC_AFIO_CLK_EN(); // Enable AFIO clock
 8000346:	699a      	ldr	r2, [r3, #24]
 8000348:	f042 0201 	orr.w	r2, r2, #1
 800034c:	619a      	str	r2, [r3, #24]

    while (1)
 800034e:	e7fe      	b.n	800034e <main+0x2a>
 8000350:	40021000 	.word	0x40021000

08000354 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000354:	480d      	ldr	r0, [pc, #52]	@ (800038c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000356:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000358:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800035c:	480c      	ldr	r0, [pc, #48]	@ (8000390 <LoopForever+0x6>)
  ldr r1, =_edata
 800035e:	490d      	ldr	r1, [pc, #52]	@ (8000394 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000360:	4a0d      	ldr	r2, [pc, #52]	@ (8000398 <LoopForever+0xe>)
  movs r3, #0
 8000362:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000364:	e002      	b.n	800036c <LoopCopyDataInit>

08000366 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000366:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000368:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800036a:	3304      	adds	r3, #4

0800036c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800036c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800036e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000370:	d3f9      	bcc.n	8000366 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000372:	4a0a      	ldr	r2, [pc, #40]	@ (800039c <LoopForever+0x12>)
  ldr r4, =_ebss
 8000374:	4c0a      	ldr	r4, [pc, #40]	@ (80003a0 <LoopForever+0x16>)
  movs r3, #0
 8000376:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000378:	e001      	b.n	800037e <LoopFillZerobss>

0800037a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800037a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800037c:	3204      	adds	r2, #4

0800037e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800037e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000380:	d3fb      	bcc.n	800037a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000382:	f000 f811 	bl	80003a8 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000386:	f7ff ffcd 	bl	8000324 <main>

0800038a <LoopForever>:

LoopForever:
  b LoopForever
 800038a:	e7fe      	b.n	800038a <LoopForever>
  ldr   r0, =_estack
 800038c:	20002800 	.word	0x20002800
  ldr r0, =_sdata
 8000390:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000394:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000398:	08000410 	.word	0x08000410
  ldr r2, =_sbss
 800039c:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80003a0:	20000068 	.word	0x20000068

080003a4 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80003a4:	e7fe      	b.n	80003a4 <ADC1_2_IRQHandler>
	...

080003a8 <__libc_init_array>:
 80003a8:	b570      	push	{r4, r5, r6, lr}
 80003aa:	2600      	movs	r6, #0
 80003ac:	4d0c      	ldr	r5, [pc, #48]	@ (80003e0 <__libc_init_array+0x38>)
 80003ae:	4c0d      	ldr	r4, [pc, #52]	@ (80003e4 <__libc_init_array+0x3c>)
 80003b0:	1b64      	subs	r4, r4, r5
 80003b2:	10a4      	asrs	r4, r4, #2
 80003b4:	42a6      	cmp	r6, r4
 80003b6:	d109      	bne.n	80003cc <__libc_init_array+0x24>
 80003b8:	f000 f81a 	bl	80003f0 <_init>
 80003bc:	2600      	movs	r6, #0
 80003be:	4d0a      	ldr	r5, [pc, #40]	@ (80003e8 <__libc_init_array+0x40>)
 80003c0:	4c0a      	ldr	r4, [pc, #40]	@ (80003ec <__libc_init_array+0x44>)
 80003c2:	1b64      	subs	r4, r4, r5
 80003c4:	10a4      	asrs	r4, r4, #2
 80003c6:	42a6      	cmp	r6, r4
 80003c8:	d105      	bne.n	80003d6 <__libc_init_array+0x2e>
 80003ca:	bd70      	pop	{r4, r5, r6, pc}
 80003cc:	f855 3b04 	ldr.w	r3, [r5], #4
 80003d0:	4798      	blx	r3
 80003d2:	3601      	adds	r6, #1
 80003d4:	e7ee      	b.n	80003b4 <__libc_init_array+0xc>
 80003d6:	f855 3b04 	ldr.w	r3, [r5], #4
 80003da:	4798      	blx	r3
 80003dc:	3601      	adds	r6, #1
 80003de:	e7f2      	b.n	80003c6 <__libc_init_array+0x1e>
 80003e0:	08000408 	.word	0x08000408
 80003e4:	08000408 	.word	0x08000408
 80003e8:	08000408 	.word	0x08000408
 80003ec:	0800040c 	.word	0x0800040c

080003f0 <_init>:
 80003f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80003f2:	bf00      	nop
 80003f4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80003f6:	bc08      	pop	{r3}
 80003f8:	469e      	mov	lr, r3
 80003fa:	4770      	bx	lr

080003fc <_fini>:
 80003fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80003fe:	bf00      	nop
 8000400:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000402:	bc08      	pop	{r3}
 8000404:	469e      	mov	lr, r3
 8000406:	4770      	bx	lr
