
Avr.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000b0  00000000  00000000  000000d4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  000000b0  0000037a  2**0
                  ALLOC
  2 .comment      0000002f  00000000  00000000  0000052f  2**0
                  CONTENTS, READONLY
  3 .stack.descriptors.hdr 0000000e  00000000  00000000  0000055e  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000090  00000000  00000000  0000056c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001137  00000000  00000000  000005fc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000778  00000000  00000000  00001733  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000573  00000000  00000000  00001eab  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000e8  00000000  00000000  00002420  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000001c0  00000000  00000000  00002508  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000209  00000000  00000000  000026c8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000060  00000000  00000000  000028d1  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .text         00000004  00000448  00000448  0000051c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00002934  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .text.led_init 0000000c  0000043c  0000043c  00000510  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.led_toggel 00000014  00000428  00000428  000004fc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .rodata       00000005  00800060  00000456  0000052a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 17 .text.main    0000003e  0000039e  0000039e  00000472  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.Pin_setDirection 000000f8  000002a6  000002a6  0000037a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .text.Pin_setLogic 000001f6  000000b0  000000b0  00000184  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .text.Pin_init 00000036  000003dc  000003dc  000004b0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .text.__dummy_fini 00000002  00000450  00000450  00000524  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 .text.__dummy_funcs_on_exit 00000002  00000452  00000452  00000526  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 .text.__dummy_simulator_exit 00000002  00000454  00000454  00000528  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 .text.exit    00000016  00000412  00000412  000004e6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 25 .text._Exit   00000004  0000044c  0000044c  00000520  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2e 00 	jmp	0x5c	; 0x5c <__ctors_end>
   4:	0c 94 24 02 	jmp	0x448	; 0x448 <__bad_interrupt>
   8:	0c 94 24 02 	jmp	0x448	; 0x448 <__bad_interrupt>
   c:	0c 94 24 02 	jmp	0x448	; 0x448 <__bad_interrupt>
  10:	0c 94 24 02 	jmp	0x448	; 0x448 <__bad_interrupt>
  14:	0c 94 24 02 	jmp	0x448	; 0x448 <__bad_interrupt>
  18:	0c 94 24 02 	jmp	0x448	; 0x448 <__bad_interrupt>
  1c:	0c 94 24 02 	jmp	0x448	; 0x448 <__bad_interrupt>
  20:	0c 94 24 02 	jmp	0x448	; 0x448 <__bad_interrupt>
  24:	0c 94 24 02 	jmp	0x448	; 0x448 <__bad_interrupt>
  28:	0c 94 24 02 	jmp	0x448	; 0x448 <__bad_interrupt>
  2c:	0c 94 24 02 	jmp	0x448	; 0x448 <__bad_interrupt>
  30:	0c 94 24 02 	jmp	0x448	; 0x448 <__bad_interrupt>
  34:	0c 94 24 02 	jmp	0x448	; 0x448 <__bad_interrupt>
  38:	0c 94 24 02 	jmp	0x448	; 0x448 <__bad_interrupt>
  3c:	0c 94 24 02 	jmp	0x448	; 0x448 <__bad_interrupt>
  40:	0c 94 24 02 	jmp	0x448	; 0x448 <__bad_interrupt>
  44:	0c 94 24 02 	jmp	0x448	; 0x448 <__bad_interrupt>
  48:	0c 94 24 02 	jmp	0x448	; 0x448 <__bad_interrupt>
  4c:	0c 94 24 02 	jmp	0x448	; 0x448 <__bad_interrupt>
  50:	0c 94 24 02 	jmp	0x448	; 0x448 <__bad_interrupt>

00000054 <.dinit>:
  54:	00 60       	ori	r16, 0x00	; 0
  56:	00 65       	ori	r16, 0x50	; 80
  58:	00 04       	cpc	r0, r0
  5a:	56 00       	.word	0x0056	; ????

0000005c <__ctors_end>:
  5c:	11 24       	eor	r1, r1
  5e:	1f be       	out	0x3f, r1	; 63
  60:	cf e5       	ldi	r28, 0x5F	; 95
  62:	d8 e0       	ldi	r29, 0x08	; 8
  64:	de bf       	out	0x3e, r29	; 62
  66:	cd bf       	out	0x3d, r28	; 61

00000068 <__do_copy_data>:
  68:	e4 e5       	ldi	r30, 0x54	; 84
  6a:	f0 e0       	ldi	r31, 0x00	; 0
  6c:	40 e0       	ldi	r20, 0x00	; 0
  6e:	17 c0       	rjmp	.+46     	; 0x9e <__do_clear_bss+0x8>
  70:	b5 91       	lpm	r27, Z+
  72:	a5 91       	lpm	r26, Z+
  74:	35 91       	lpm	r19, Z+
  76:	25 91       	lpm	r18, Z+
  78:	05 91       	lpm	r16, Z+
  7a:	07 fd       	sbrc	r16, 7
  7c:	0c c0       	rjmp	.+24     	; 0x96 <__do_clear_bss>
  7e:	95 91       	lpm	r25, Z+
  80:	85 91       	lpm	r24, Z+
  82:	ef 01       	movw	r28, r30
  84:	f9 2f       	mov	r31, r25
  86:	e8 2f       	mov	r30, r24
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	a2 17       	cp	r26, r18
  8e:	b3 07       	cpc	r27, r19
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0x20>
  92:	fe 01       	movw	r30, r28
  94:	04 c0       	rjmp	.+8      	; 0x9e <__do_clear_bss+0x8>

00000096 <__do_clear_bss>:
  96:	1d 92       	st	X+, r1
  98:	a2 17       	cp	r26, r18
  9a:	b3 07       	cpc	r27, r19
  9c:	e1 f7       	brne	.-8      	; 0x96 <__do_clear_bss>
  9e:	eb 35       	cpi	r30, 0x5B	; 91
  a0:	f4 07       	cpc	r31, r20
  a2:	31 f7       	brne	.-52     	; 0x70 <__do_copy_data+0x8>
  a4:	0e 94 cf 01 	call	0x39e	; 0x39e <main>
  a8:	0c 94 09 02 	jmp	0x412	; 0x412 <exit>

000000ac <_exit>:
  ac:	f8 94       	cli

000000ae <__stop_program>:
  ae:	ff cf       	rjmp	.-2      	; 0xae <__stop_program>

Disassembly of section .text:

00000448 <__bad_interrupt>:
 448:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

Disassembly of section .text.led_init:

0000043c <led_init>:
 43c:	fc 01       	movw	r30, r24
 43e:	24 81       	ldd	r18, Z+4	; 0x04
 440:	23 83       	std	Z+3, r18	; 0x03
 442:	0e 94 ee 01 	call	0x3dc	; 0x3dc <Pin_init>
 446:	08 95       	ret

Disassembly of section .text.led_toggel:

00000428 <led_toggel>:
 428:	fc 01       	movw	r30, r24
 42a:	33 81       	ldd	r19, Z+3	; 0x03
 42c:	21 e0       	ldi	r18, 0x01	; 1
 42e:	31 11       	cpse	r19, r1
 430:	20 e0       	ldi	r18, 0x00	; 0
 432:	fc 01       	movw	r30, r24
 434:	23 83       	std	Z+3, r18	; 0x03
 436:	0e 94 58 00 	call	0xb0	; 0xb0 <_etext>
 43a:	08 95       	ret

Disassembly of section .text.main:

0000039e <main>:
 39e:	cf 93       	push	r28
 3a0:	df 93       	push	r29
 3a2:	00 d0       	rcall	.+0      	; 0x3a4 <main+0x6>
 3a4:	00 d0       	rcall	.+0      	; 0x3a6 <main+0x8>
 3a6:	0f 92       	push	r0
 3a8:	cd b7       	in	r28, 0x3d	; 61
 3aa:	de b7       	in	r29, 0x3e	; 62
 3ac:	85 e0       	ldi	r24, 0x05	; 5
 3ae:	e0 e6       	ldi	r30, 0x60	; 96
 3b0:	f0 e0       	ldi	r31, 0x00	; 0
 3b2:	de 01       	movw	r26, r28
 3b4:	11 96       	adiw	r26, 0x01	; 1
 3b6:	01 90       	ld	r0, Z+
 3b8:	0d 92       	st	X+, r0
 3ba:	8a 95       	dec	r24
 3bc:	e1 f7       	brne	.-8      	; 0x3b6 <main+0x18>
 3be:	ce 01       	movw	r24, r28
 3c0:	01 96       	adiw	r24, 0x01	; 1
 3c2:	0e 94 1e 02 	call	0x43c	; 0x43c <led_init>
 3c6:	ce 01       	movw	r24, r28
 3c8:	01 96       	adiw	r24, 0x01	; 1
 3ca:	0e 94 14 02 	call	0x428	; 0x428 <led_toggel>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 3ce:	8f e4       	ldi	r24, 0x4F	; 79
 3d0:	93 ec       	ldi	r25, 0xC3	; 195
 3d2:	01 97       	sbiw	r24, 0x01	; 1
 3d4:	f1 f7       	brne	.-4      	; 0x3d2 <main+0x34>
 3d6:	00 c0       	rjmp	.+0      	; 0x3d8 <main+0x3a>
 3d8:	00 00       	nop
 3da:	f5 cf       	rjmp	.-22     	; 0x3c6 <main+0x28>

Disassembly of section .text.Pin_setDirection:

000002a6 <Pin_setDirection>:
 2a6:	fc 01       	movw	r30, r24
 2a8:	82 81       	ldd	r24, Z+2	; 0x02
 2aa:	81 30       	cpi	r24, 0x01	; 1
 2ac:	c9 f5       	brne	.+114    	; 0x320 <Pin_setDirection+0x7a>
 2ae:	81 81       	ldd	r24, Z+1	; 0x01
 2b0:	81 30       	cpi	r24, 0x01	; 1
 2b2:	91 f0       	breq	.+36     	; 0x2d8 <Pin_setDirection+0x32>
 2b4:	28 f0       	brcs	.+10     	; 0x2c0 <Pin_setDirection+0x1a>
 2b6:	82 30       	cpi	r24, 0x02	; 2
 2b8:	d9 f0       	breq	.+54     	; 0x2f0 <Pin_setDirection+0x4a>
 2ba:	83 30       	cpi	r24, 0x03	; 3
 2bc:	29 f1       	breq	.+74     	; 0x308 <Pin_setDirection+0x62>
 2be:	08 95       	ret
 2c0:	2a b3       	in	r18, 0x1a	; 26
 2c2:	81 e0       	ldi	r24, 0x01	; 1
 2c4:	90 e0       	ldi	r25, 0x00	; 0
 2c6:	00 80       	ld	r0, Z
 2c8:	02 c0       	rjmp	.+4      	; 0x2ce <Pin_setDirection+0x28>
 2ca:	88 0f       	add	r24, r24
 2cc:	99 1f       	adc	r25, r25
 2ce:	0a 94       	dec	r0
 2d0:	e2 f7       	brpl	.-8      	; 0x2ca <Pin_setDirection+0x24>
 2d2:	82 2b       	or	r24, r18
 2d4:	8a bb       	out	0x1a, r24	; 26
 2d6:	08 95       	ret
 2d8:	27 b3       	in	r18, 0x17	; 23
 2da:	81 e0       	ldi	r24, 0x01	; 1
 2dc:	90 e0       	ldi	r25, 0x00	; 0
 2de:	00 80       	ld	r0, Z
 2e0:	02 c0       	rjmp	.+4      	; 0x2e6 <Pin_setDirection+0x40>
 2e2:	88 0f       	add	r24, r24
 2e4:	99 1f       	adc	r25, r25
 2e6:	0a 94       	dec	r0
 2e8:	e2 f7       	brpl	.-8      	; 0x2e2 <Pin_setDirection+0x3c>
 2ea:	82 2b       	or	r24, r18
 2ec:	87 bb       	out	0x17, r24	; 23
 2ee:	08 95       	ret
 2f0:	24 b3       	in	r18, 0x14	; 20
 2f2:	81 e0       	ldi	r24, 0x01	; 1
 2f4:	90 e0       	ldi	r25, 0x00	; 0
 2f6:	00 80       	ld	r0, Z
 2f8:	02 c0       	rjmp	.+4      	; 0x2fe <Pin_setDirection+0x58>
 2fa:	88 0f       	add	r24, r24
 2fc:	99 1f       	adc	r25, r25
 2fe:	0a 94       	dec	r0
 300:	e2 f7       	brpl	.-8      	; 0x2fa <Pin_setDirection+0x54>
 302:	82 2b       	or	r24, r18
 304:	84 bb       	out	0x14, r24	; 20
 306:	08 95       	ret
 308:	21 b3       	in	r18, 0x11	; 17
 30a:	81 e0       	ldi	r24, 0x01	; 1
 30c:	90 e0       	ldi	r25, 0x00	; 0
 30e:	00 80       	ld	r0, Z
 310:	02 c0       	rjmp	.+4      	; 0x316 <Pin_setDirection+0x70>
 312:	88 0f       	add	r24, r24
 314:	99 1f       	adc	r25, r25
 316:	0a 94       	dec	r0
 318:	e2 f7       	brpl	.-8      	; 0x312 <Pin_setDirection+0x6c>
 31a:	82 2b       	or	r24, r18
 31c:	81 bb       	out	0x11, r24	; 17
 31e:	08 95       	ret
 320:	81 11       	cpse	r24, r1
 322:	3c c0       	rjmp	.+120    	; 0x39c <Pin_setDirection+0xf6>
 324:	81 81       	ldd	r24, Z+1	; 0x01
 326:	81 30       	cpi	r24, 0x01	; 1
 328:	99 f0       	breq	.+38     	; 0x350 <Pin_setDirection+0xaa>
 32a:	28 f0       	brcs	.+10     	; 0x336 <Pin_setDirection+0x90>
 32c:	82 30       	cpi	r24, 0x02	; 2
 32e:	e9 f0       	breq	.+58     	; 0x36a <Pin_setDirection+0xc4>
 330:	83 30       	cpi	r24, 0x03	; 3
 332:	41 f1       	breq	.+80     	; 0x384 <Pin_setDirection+0xde>
 334:	08 95       	ret
 336:	2a b3       	in	r18, 0x1a	; 26
 338:	81 e0       	ldi	r24, 0x01	; 1
 33a:	90 e0       	ldi	r25, 0x00	; 0
 33c:	00 80       	ld	r0, Z
 33e:	02 c0       	rjmp	.+4      	; 0x344 <Pin_setDirection+0x9e>
 340:	88 0f       	add	r24, r24
 342:	99 1f       	adc	r25, r25
 344:	0a 94       	dec	r0
 346:	e2 f7       	brpl	.-8      	; 0x340 <Pin_setDirection+0x9a>
 348:	80 95       	com	r24
 34a:	82 23       	and	r24, r18
 34c:	8a bb       	out	0x1a, r24	; 26
 34e:	08 95       	ret
 350:	27 b3       	in	r18, 0x17	; 23
 352:	81 e0       	ldi	r24, 0x01	; 1
 354:	90 e0       	ldi	r25, 0x00	; 0
 356:	00 80       	ld	r0, Z
 358:	02 c0       	rjmp	.+4      	; 0x35e <Pin_setDirection+0xb8>
 35a:	88 0f       	add	r24, r24
 35c:	99 1f       	adc	r25, r25
 35e:	0a 94       	dec	r0
 360:	e2 f7       	brpl	.-8      	; 0x35a <Pin_setDirection+0xb4>
 362:	80 95       	com	r24
 364:	82 23       	and	r24, r18
 366:	87 bb       	out	0x17, r24	; 23
 368:	08 95       	ret
 36a:	24 b3       	in	r18, 0x14	; 20
 36c:	81 e0       	ldi	r24, 0x01	; 1
 36e:	90 e0       	ldi	r25, 0x00	; 0
 370:	00 80       	ld	r0, Z
 372:	02 c0       	rjmp	.+4      	; 0x378 <Pin_setDirection+0xd2>
 374:	88 0f       	add	r24, r24
 376:	99 1f       	adc	r25, r25
 378:	0a 94       	dec	r0
 37a:	e2 f7       	brpl	.-8      	; 0x374 <Pin_setDirection+0xce>
 37c:	80 95       	com	r24
 37e:	82 23       	and	r24, r18
 380:	84 bb       	out	0x14, r24	; 20
 382:	08 95       	ret
 384:	21 b3       	in	r18, 0x11	; 17
 386:	81 e0       	ldi	r24, 0x01	; 1
 388:	90 e0       	ldi	r25, 0x00	; 0
 38a:	00 80       	ld	r0, Z
 38c:	02 c0       	rjmp	.+4      	; 0x392 <Pin_setDirection+0xec>
 38e:	88 0f       	add	r24, r24
 390:	99 1f       	adc	r25, r25
 392:	0a 94       	dec	r0
 394:	e2 f7       	brpl	.-8      	; 0x38e <Pin_setDirection+0xe8>
 396:	80 95       	com	r24
 398:	82 23       	and	r24, r18
 39a:	81 bb       	out	0x11, r24	; 17
 39c:	08 95       	ret

Disassembly of section .text.Pin_setLogic:

000000b0 <Pin_setLogic>:
  b0:	fc 01       	movw	r30, r24
  b2:	82 81       	ldd	r24, Z+2	; 0x02
  b4:	81 30       	cpi	r24, 0x01	; 1
  b6:	09 f0       	breq	.+2      	; 0xba <Pin_setLogic+0xa>
  b8:	7a c0       	rjmp	.+244    	; 0x1ae <Pin_setLogic+0xfe>
  ba:	81 81       	ldd	r24, Z+1	; 0x01
  bc:	81 30       	cpi	r24, 0x01	; 1
  be:	19 f1       	breq	.+70     	; 0x106 <Pin_setLogic+0x56>
  c0:	30 f0       	brcs	.+12     	; 0xce <Pin_setLogic+0x1e>
  c2:	82 30       	cpi	r24, 0x02	; 2
  c4:	e1 f1       	breq	.+120    	; 0x13e <Pin_setLogic+0x8e>
  c6:	83 30       	cpi	r24, 0x03	; 3
  c8:	09 f4       	brne	.+2      	; 0xcc <Pin_setLogic+0x1c>
  ca:	55 c0       	rjmp	.+170    	; 0x176 <Pin_setLogic+0xc6>
  cc:	08 95       	ret
  ce:	83 81       	ldd	r24, Z+3	; 0x03
  d0:	81 30       	cpi	r24, 0x01	; 1
  d2:	61 f4       	brne	.+24     	; 0xec <Pin_setLogic+0x3c>
  d4:	2b b3       	in	r18, 0x1b	; 27
  d6:	81 e0       	ldi	r24, 0x01	; 1
  d8:	90 e0       	ldi	r25, 0x00	; 0
  da:	00 80       	ld	r0, Z
  dc:	02 c0       	rjmp	.+4      	; 0xe2 <Pin_setLogic+0x32>
  de:	88 0f       	add	r24, r24
  e0:	99 1f       	adc	r25, r25
  e2:	0a 94       	dec	r0
  e4:	e2 f7       	brpl	.-8      	; 0xde <Pin_setLogic+0x2e>
  e6:	82 2b       	or	r24, r18
  e8:	8b bb       	out	0x1b, r24	; 27
  ea:	08 95       	ret
  ec:	2b b3       	in	r18, 0x1b	; 27
  ee:	81 e0       	ldi	r24, 0x01	; 1
  f0:	90 e0       	ldi	r25, 0x00	; 0
  f2:	00 80       	ld	r0, Z
  f4:	02 c0       	rjmp	.+4      	; 0xfa <Pin_setLogic+0x4a>
  f6:	88 0f       	add	r24, r24
  f8:	99 1f       	adc	r25, r25
  fa:	0a 94       	dec	r0
  fc:	e2 f7       	brpl	.-8      	; 0xf6 <Pin_setLogic+0x46>
  fe:	80 95       	com	r24
 100:	82 23       	and	r24, r18
 102:	8b bb       	out	0x1b, r24	; 27
 104:	08 95       	ret
 106:	83 81       	ldd	r24, Z+3	; 0x03
 108:	81 30       	cpi	r24, 0x01	; 1
 10a:	61 f4       	brne	.+24     	; 0x124 <Pin_setLogic+0x74>
 10c:	28 b3       	in	r18, 0x18	; 24
 10e:	81 e0       	ldi	r24, 0x01	; 1
 110:	90 e0       	ldi	r25, 0x00	; 0
 112:	00 80       	ld	r0, Z
 114:	02 c0       	rjmp	.+4      	; 0x11a <Pin_setLogic+0x6a>
 116:	88 0f       	add	r24, r24
 118:	99 1f       	adc	r25, r25
 11a:	0a 94       	dec	r0
 11c:	e2 f7       	brpl	.-8      	; 0x116 <Pin_setLogic+0x66>
 11e:	82 2b       	or	r24, r18
 120:	88 bb       	out	0x18, r24	; 24
 122:	08 95       	ret
 124:	28 b3       	in	r18, 0x18	; 24
 126:	81 e0       	ldi	r24, 0x01	; 1
 128:	90 e0       	ldi	r25, 0x00	; 0
 12a:	00 80       	ld	r0, Z
 12c:	02 c0       	rjmp	.+4      	; 0x132 <Pin_setLogic+0x82>
 12e:	88 0f       	add	r24, r24
 130:	99 1f       	adc	r25, r25
 132:	0a 94       	dec	r0
 134:	e2 f7       	brpl	.-8      	; 0x12e <Pin_setLogic+0x7e>
 136:	80 95       	com	r24
 138:	82 23       	and	r24, r18
 13a:	88 bb       	out	0x18, r24	; 24
 13c:	08 95       	ret
 13e:	83 81       	ldd	r24, Z+3	; 0x03
 140:	81 30       	cpi	r24, 0x01	; 1
 142:	61 f4       	brne	.+24     	; 0x15c <Pin_setLogic+0xac>
 144:	25 b3       	in	r18, 0x15	; 21
 146:	81 e0       	ldi	r24, 0x01	; 1
 148:	90 e0       	ldi	r25, 0x00	; 0
 14a:	00 80       	ld	r0, Z
 14c:	02 c0       	rjmp	.+4      	; 0x152 <Pin_setLogic+0xa2>
 14e:	88 0f       	add	r24, r24
 150:	99 1f       	adc	r25, r25
 152:	0a 94       	dec	r0
 154:	e2 f7       	brpl	.-8      	; 0x14e <Pin_setLogic+0x9e>
 156:	82 2b       	or	r24, r18
 158:	85 bb       	out	0x15, r24	; 21
 15a:	08 95       	ret
 15c:	25 b3       	in	r18, 0x15	; 21
 15e:	81 e0       	ldi	r24, 0x01	; 1
 160:	90 e0       	ldi	r25, 0x00	; 0
 162:	00 80       	ld	r0, Z
 164:	02 c0       	rjmp	.+4      	; 0x16a <Pin_setLogic+0xba>
 166:	88 0f       	add	r24, r24
 168:	99 1f       	adc	r25, r25
 16a:	0a 94       	dec	r0
 16c:	e2 f7       	brpl	.-8      	; 0x166 <Pin_setLogic+0xb6>
 16e:	80 95       	com	r24
 170:	82 23       	and	r24, r18
 172:	85 bb       	out	0x15, r24	; 21
 174:	08 95       	ret
 176:	83 81       	ldd	r24, Z+3	; 0x03
 178:	81 30       	cpi	r24, 0x01	; 1
 17a:	61 f4       	brne	.+24     	; 0x194 <Pin_setLogic+0xe4>
 17c:	22 b3       	in	r18, 0x12	; 18
 17e:	81 e0       	ldi	r24, 0x01	; 1
 180:	90 e0       	ldi	r25, 0x00	; 0
 182:	00 80       	ld	r0, Z
 184:	02 c0       	rjmp	.+4      	; 0x18a <Pin_setLogic+0xda>
 186:	88 0f       	add	r24, r24
 188:	99 1f       	adc	r25, r25
 18a:	0a 94       	dec	r0
 18c:	e2 f7       	brpl	.-8      	; 0x186 <Pin_setLogic+0xd6>
 18e:	82 2b       	or	r24, r18
 190:	82 bb       	out	0x12, r24	; 18
 192:	08 95       	ret
 194:	22 b3       	in	r18, 0x12	; 18
 196:	81 e0       	ldi	r24, 0x01	; 1
 198:	90 e0       	ldi	r25, 0x00	; 0
 19a:	00 80       	ld	r0, Z
 19c:	02 c0       	rjmp	.+4      	; 0x1a2 <Pin_setLogic+0xf2>
 19e:	88 0f       	add	r24, r24
 1a0:	99 1f       	adc	r25, r25
 1a2:	0a 94       	dec	r0
 1a4:	e2 f7       	brpl	.-8      	; 0x19e <Pin_setLogic+0xee>
 1a6:	80 95       	com	r24
 1a8:	82 23       	and	r24, r18
 1aa:	82 bb       	out	0x12, r24	; 18
 1ac:	08 95       	ret
 1ae:	81 11       	cpse	r24, r1
 1b0:	79 c0       	rjmp	.+242    	; 0x2a4 <Pin_setLogic+0x1f4>
 1b2:	81 81       	ldd	r24, Z+1	; 0x01
 1b4:	81 30       	cpi	r24, 0x01	; 1
 1b6:	19 f1       	breq	.+70     	; 0x1fe <Pin_setLogic+0x14e>
 1b8:	30 f0       	brcs	.+12     	; 0x1c6 <Pin_setLogic+0x116>
 1ba:	82 30       	cpi	r24, 0x02	; 2
 1bc:	e1 f1       	breq	.+120    	; 0x236 <Pin_setLogic+0x186>
 1be:	83 30       	cpi	r24, 0x03	; 3
 1c0:	09 f4       	brne	.+2      	; 0x1c4 <Pin_setLogic+0x114>
 1c2:	55 c0       	rjmp	.+170    	; 0x26e <Pin_setLogic+0x1be>
 1c4:	08 95       	ret
 1c6:	83 81       	ldd	r24, Z+3	; 0x03
 1c8:	81 30       	cpi	r24, 0x01	; 1
 1ca:	61 f4       	brne	.+24     	; 0x1e4 <Pin_setLogic+0x134>
 1cc:	2b b3       	in	r18, 0x1b	; 27
 1ce:	81 e0       	ldi	r24, 0x01	; 1
 1d0:	90 e0       	ldi	r25, 0x00	; 0
 1d2:	00 80       	ld	r0, Z
 1d4:	02 c0       	rjmp	.+4      	; 0x1da <Pin_setLogic+0x12a>
 1d6:	88 0f       	add	r24, r24
 1d8:	99 1f       	adc	r25, r25
 1da:	0a 94       	dec	r0
 1dc:	e2 f7       	brpl	.-8      	; 0x1d6 <Pin_setLogic+0x126>
 1de:	82 2b       	or	r24, r18
 1e0:	8b bb       	out	0x1b, r24	; 27
 1e2:	08 95       	ret
 1e4:	2b b3       	in	r18, 0x1b	; 27
 1e6:	81 e0       	ldi	r24, 0x01	; 1
 1e8:	90 e0       	ldi	r25, 0x00	; 0
 1ea:	00 80       	ld	r0, Z
 1ec:	02 c0       	rjmp	.+4      	; 0x1f2 <Pin_setLogic+0x142>
 1ee:	88 0f       	add	r24, r24
 1f0:	99 1f       	adc	r25, r25
 1f2:	0a 94       	dec	r0
 1f4:	e2 f7       	brpl	.-8      	; 0x1ee <Pin_setLogic+0x13e>
 1f6:	80 95       	com	r24
 1f8:	82 23       	and	r24, r18
 1fa:	8b bb       	out	0x1b, r24	; 27
 1fc:	08 95       	ret
 1fe:	83 81       	ldd	r24, Z+3	; 0x03
 200:	81 30       	cpi	r24, 0x01	; 1
 202:	61 f4       	brne	.+24     	; 0x21c <Pin_setLogic+0x16c>
 204:	28 b3       	in	r18, 0x18	; 24
 206:	81 e0       	ldi	r24, 0x01	; 1
 208:	90 e0       	ldi	r25, 0x00	; 0
 20a:	00 80       	ld	r0, Z
 20c:	02 c0       	rjmp	.+4      	; 0x212 <Pin_setLogic+0x162>
 20e:	88 0f       	add	r24, r24
 210:	99 1f       	adc	r25, r25
 212:	0a 94       	dec	r0
 214:	e2 f7       	brpl	.-8      	; 0x20e <Pin_setLogic+0x15e>
 216:	82 2b       	or	r24, r18
 218:	88 bb       	out	0x18, r24	; 24
 21a:	08 95       	ret
 21c:	28 b3       	in	r18, 0x18	; 24
 21e:	81 e0       	ldi	r24, 0x01	; 1
 220:	90 e0       	ldi	r25, 0x00	; 0
 222:	00 80       	ld	r0, Z
 224:	02 c0       	rjmp	.+4      	; 0x22a <Pin_setLogic+0x17a>
 226:	88 0f       	add	r24, r24
 228:	99 1f       	adc	r25, r25
 22a:	0a 94       	dec	r0
 22c:	e2 f7       	brpl	.-8      	; 0x226 <Pin_setLogic+0x176>
 22e:	80 95       	com	r24
 230:	82 23       	and	r24, r18
 232:	88 bb       	out	0x18, r24	; 24
 234:	08 95       	ret
 236:	83 81       	ldd	r24, Z+3	; 0x03
 238:	81 30       	cpi	r24, 0x01	; 1
 23a:	61 f4       	brne	.+24     	; 0x254 <Pin_setLogic+0x1a4>
 23c:	25 b3       	in	r18, 0x15	; 21
 23e:	81 e0       	ldi	r24, 0x01	; 1
 240:	90 e0       	ldi	r25, 0x00	; 0
 242:	00 80       	ld	r0, Z
 244:	02 c0       	rjmp	.+4      	; 0x24a <Pin_setLogic+0x19a>
 246:	88 0f       	add	r24, r24
 248:	99 1f       	adc	r25, r25
 24a:	0a 94       	dec	r0
 24c:	e2 f7       	brpl	.-8      	; 0x246 <Pin_setLogic+0x196>
 24e:	82 2b       	or	r24, r18
 250:	85 bb       	out	0x15, r24	; 21
 252:	08 95       	ret
 254:	25 b3       	in	r18, 0x15	; 21
 256:	81 e0       	ldi	r24, 0x01	; 1
 258:	90 e0       	ldi	r25, 0x00	; 0
 25a:	00 80       	ld	r0, Z
 25c:	02 c0       	rjmp	.+4      	; 0x262 <Pin_setLogic+0x1b2>
 25e:	88 0f       	add	r24, r24
 260:	99 1f       	adc	r25, r25
 262:	0a 94       	dec	r0
 264:	e2 f7       	brpl	.-8      	; 0x25e <Pin_setLogic+0x1ae>
 266:	80 95       	com	r24
 268:	82 23       	and	r24, r18
 26a:	85 bb       	out	0x15, r24	; 21
 26c:	08 95       	ret
 26e:	83 81       	ldd	r24, Z+3	; 0x03
 270:	81 30       	cpi	r24, 0x01	; 1
 272:	61 f4       	brne	.+24     	; 0x28c <Pin_setLogic+0x1dc>
 274:	22 b3       	in	r18, 0x12	; 18
 276:	81 e0       	ldi	r24, 0x01	; 1
 278:	90 e0       	ldi	r25, 0x00	; 0
 27a:	00 80       	ld	r0, Z
 27c:	02 c0       	rjmp	.+4      	; 0x282 <Pin_setLogic+0x1d2>
 27e:	88 0f       	add	r24, r24
 280:	99 1f       	adc	r25, r25
 282:	0a 94       	dec	r0
 284:	e2 f7       	brpl	.-8      	; 0x27e <Pin_setLogic+0x1ce>
 286:	82 2b       	or	r24, r18
 288:	82 bb       	out	0x12, r24	; 18
 28a:	08 95       	ret
 28c:	22 b3       	in	r18, 0x12	; 18
 28e:	81 e0       	ldi	r24, 0x01	; 1
 290:	90 e0       	ldi	r25, 0x00	; 0
 292:	00 80       	ld	r0, Z
 294:	02 c0       	rjmp	.+4      	; 0x29a <Pin_setLogic+0x1ea>
 296:	88 0f       	add	r24, r24
 298:	99 1f       	adc	r25, r25
 29a:	0a 94       	dec	r0
 29c:	e2 f7       	brpl	.-8      	; 0x296 <Pin_setLogic+0x1e6>
 29e:	80 95       	com	r24
 2a0:	82 23       	and	r24, r18
 2a2:	82 bb       	out	0x12, r24	; 18
 2a4:	08 95       	ret

Disassembly of section .text.Pin_init:

000003dc <Pin_init>:
 3dc:	cf 93       	push	r28
 3de:	df 93       	push	r29
 3e0:	00 97       	sbiw	r24, 0x00	; 0
 3e2:	79 f0       	breq	.+30     	; 0x402 <__EEPROM_REGION_LENGTH__+0x2>
 3e4:	fc 01       	movw	r30, r24
 3e6:	20 81       	ld	r18, Z
 3e8:	28 30       	cpi	r18, 0x08	; 8
 3ea:	68 f4       	brcc	.+26     	; 0x406 <__EEPROM_REGION_LENGTH__+0x6>
 3ec:	21 81       	ldd	r18, Z+1	; 0x01
 3ee:	24 30       	cpi	r18, 0x04	; 4
 3f0:	60 f4       	brcc	.+24     	; 0x40a <__EEPROM_REGION_LENGTH__+0xa>
 3f2:	ec 01       	movw	r28, r24
 3f4:	0e 94 53 01 	call	0x2a6	; 0x2a6 <Pin_setDirection>
 3f8:	ce 01       	movw	r24, r28
 3fa:	0e 94 58 00 	call	0xb0	; 0xb0 <_etext>
 3fe:	81 e0       	ldi	r24, 0x01	; 1
 400:	05 c0       	rjmp	.+10     	; 0x40c <__EEPROM_REGION_LENGTH__+0xc>
 402:	80 e0       	ldi	r24, 0x00	; 0
 404:	03 c0       	rjmp	.+6      	; 0x40c <__EEPROM_REGION_LENGTH__+0xc>
 406:	80 e0       	ldi	r24, 0x00	; 0
 408:	01 c0       	rjmp	.+2      	; 0x40c <__EEPROM_REGION_LENGTH__+0xc>
 40a:	80 e0       	ldi	r24, 0x00	; 0
 40c:	df 91       	pop	r29
 40e:	cf 91       	pop	r28
 410:	08 95       	ret

Disassembly of section .text.__dummy_fini:

00000450 <_fini>:
 450:	08 95       	ret

Disassembly of section .text.__dummy_funcs_on_exit:

00000452 <__funcs_on_exit>:
 452:	08 95       	ret

Disassembly of section .text.__dummy_simulator_exit:

00000454 <__simulator_exit>:
 454:	08 95       	ret

Disassembly of section .text.exit:

00000412 <exit>:
 412:	ec 01       	movw	r28, r24
 414:	0e 94 29 02 	call	0x452	; 0x452 <__funcs_on_exit>
 418:	0e 94 28 02 	call	0x450	; 0x450 <_fini>
 41c:	ce 01       	movw	r24, r28
 41e:	0e 94 2a 02 	call	0x454	; 0x454 <__simulator_exit>
 422:	ce 01       	movw	r24, r28
 424:	0e 94 26 02 	call	0x44c	; 0x44c <_Exit>

Disassembly of section .text._Exit:

0000044c <_Exit>:
 44c:	0e 94 56 00 	call	0xac	; 0xac <_exit>
